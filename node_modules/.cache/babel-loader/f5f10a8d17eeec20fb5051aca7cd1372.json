{"ast":null,"code":"var _jsxFileName = \"/Users/tamurakeito/Desktop/facemesh/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { button, useControls } from 'leva';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport { css } from '@emotion/css';\nimport { Camera } from '@mediapipe/camera_utils';\nimport { FaceMesh, FACEMESH_LEFT_EYE, FACEMESH_LIPS, FACEMESH_RIGHT_EYE } from '@mediapipe/face_mesh';\nimport { draw } from './drawCanvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const resultsRef = useRef(); // コントローラーの追加\n\n  const datas = useControls({\n    bgImage: false,\n    landmark: {\n      min: 0,\n      max: 477,\n      step: 1,\n      value: 0\n    },\n    result: button(() => {\n      OutputData();\n    })\n  });\n  /** 検出結果をconsoleに出力する */\n\n  const OutputData = () => {\n    const results = resultsRef.current;\n    console.log(results.multiFaceLandmarks[0]);\n    console.log('FACEMESH_LEFT_EYE', FACEMESH_LEFT_EYE);\n    console.log('FACEMESH_RIGHT_EYE', FACEMESH_RIGHT_EYE);\n    console.log('FACEMESH_LIPS', FACEMESH_LIPS);\n  };\n  /** 検出結果（フレーム毎に呼び出される） */\n\n\n  const onResults = useCallback(results => {\n    // 検出結果の格納\n    resultsRef.current = results; // 描画処理\n\n    const ctx = canvasRef.current.getContext('2d');\n    draw(ctx, results, datas.bgImage, datas.landmark);\n  }, [datas]);\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`;\n      }\n    });\n    faceMesh.setOptions({\n      maxNumFaces: 2,\n      refineLandmarks: true,\n      // landmarks 468 -> 478\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    faceMesh.onResults(onResults);\n\n    if (webcamRef.current) {\n      const camera = new Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await faceMesh.send({\n            image: webcamRef.current.video\n          });\n        },\n        width: 1280,\n        height: 720\n      });\n      camera.start();\n    }\n\n    return () => {\n      faceMesh.close();\n    };\n  }, [onResults]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      style: {\n        visibility: 'hidden'\n      },\n      audio: false,\n      width: 1280,\n      height: 720,\n      mirrored: true,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: {\n        width: 1280,\n        height: 720,\n        facingMode: 'user'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: styles.canvas,\n      width: 1280,\n      height: 720\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}; // ==============================================\n// styles\n\n_s(App, \"55+6Qspzi9vBGfDSC/ZaXP4E3uo=\", false, function () {\n  return [useControls];\n});\n\n_c = App;\nconst styles = {\n  container: css`\n        position: relative;\n        width: 100vw;\n        height: 100vh;\n        overflow: hidden;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `,\n  canvas: css`\n        position: absolute;\n        width: 1280px;\n        height: 720px;\n        background-color: #1e1e1e;\n        border: 1px solid #fff;\n    `\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["button","useControls","React","useCallback","useEffect","useRef","Webcam","css","Camera","FaceMesh","FACEMESH_LEFT_EYE","FACEMESH_LIPS","FACEMESH_RIGHT_EYE","draw","App","webcamRef","canvasRef","resultsRef","datas","bgImage","landmark","min","max","step","value","result","OutputData","results","current","console","log","multiFaceLandmarks","onResults","ctx","getContext","faceMesh","locateFile","file","setOptions","maxNumFaces","refineLandmarks","minDetectionConfidence","minTrackingConfidence","camera","video","onFrame","send","image","width","height","start","close","styles","container","visibility","facingMode","canvas"],"sources":["/Users/tamurakeito/Desktop/facemesh/src/App.tsx"],"sourcesContent":["import { button, useControls } from 'leva';\nimport React, { FC, useCallback, useEffect, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport { css } from '@emotion/css';\nimport { Camera } from '@mediapipe/camera_utils';\nimport {\n    FaceMesh, FACEMESH_LEFT_EYE, FACEMESH_LIPS, FACEMESH_RIGHT_EYE, Results\n} from '@mediapipe/face_mesh';\nimport { draw } from './drawCanvas';\n\nexport const App: FC = () => {\n    const webcamRef = useRef<Webcam>(null)\n    const canvasRef = useRef<HTMLCanvasElement>(null)\n    const resultsRef = useRef<Results>()\n\n    // コントローラーの追加\n    const datas = useControls({\n        bgImage: false,\n        landmark: {\n            min: 0,\n            max: 477,\n            step: 1,\n            value: 0\n        },\n        result: button(() => {\n            OutputData()\n        })\n    })\n\n    /** 検出結果をconsoleに出力する */\n    const OutputData = () => {\n        const results = resultsRef.current!\n        console.log(results.multiFaceLandmarks[0])\n        console.log('FACEMESH_LEFT_EYE', FACEMESH_LEFT_EYE)\n        console.log('FACEMESH_RIGHT_EYE', FACEMESH_RIGHT_EYE)\n        console.log('FACEMESH_LIPS', FACEMESH_LIPS)\n    }\n\n    /** 検出結果（フレーム毎に呼び出される） */\n    const onResults = useCallback(\n        (results: Results) => {\n            // 検出結果の格納\n            resultsRef.current = results\n            // 描画処理\n            const ctx = canvasRef.current!.getContext('2d')!\n            draw(ctx, results, datas.bgImage, datas.landmark)\n        },\n        [datas]\n    )\n\n    useEffect(() => {\n        const faceMesh = new FaceMesh({\n            locateFile: file => {\n                return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`\n            }\n        })\n\n        faceMesh.setOptions({\n            maxNumFaces: 2,\n            refineLandmarks: true, // landmarks 468 -> 478\n            minDetectionConfidence: 0.5,\n            minTrackingConfidence: 0.5\n        })\n\n        faceMesh.onResults(onResults)\n\n        if (webcamRef.current) {\n            const camera = new Camera(webcamRef.current.video!, {\n                onFrame: async () => {\n                    await faceMesh.send({ image: webcamRef.current!.video! })\n                },\n                width: 1280,\n                height: 720\n            })\n            camera.start()\n        }\n\n        return () => {\n            faceMesh.close()\n        }\n    }, [onResults])\n\n    return (\n        <div className={styles.container}>\n            {/* capture */}\n            <Webcam\n                ref={webcamRef}\n                style={{ visibility: 'hidden' }}\n                audio={false}\n                width={1280}\n                height={720}\n                mirrored\n                screenshotFormat=\"image/jpeg\"\n                videoConstraints={{ width: 1280, height: 720, facingMode: 'user' }}\n            />\n            {/* draw */}\n            <canvas ref={canvasRef} className={styles.canvas} width={1280} height={720} />\n        </div>\n    )\n}\n\n// ==============================================\n// styles\n\nconst styles = {\n    container: css`\n        position: relative;\n        width: 100vw;\n        height: 100vh;\n        overflow: hidden;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    `,\n    canvas: css`\n        position: absolute;\n        width: 1280px;\n        height: 720px;\n        background-color: #1e1e1e;\n        border: 1px solid #fff;\n    `\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}